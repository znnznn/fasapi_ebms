from datetime import datetime

from sqlalchemy import (
    Column, Integer, String, TIMESTAMP, MetaData, Float, Boolean, BINARY, DECIMAL, ForeignKey, Date, NVARCHAR
)
from sqlalchemy.orm import relationship, Mapped, mapped_column, as_declarative, declared_attr

from common.models import EBMSBase as Base


class Arinv(Base):
    arinv_guid = Column('ARINV_GUID', NVARCHAR, primary_key=True)
    recno5 = Column("RECNO5", Integer)
    id = Column("ID", String)
    name = Column("NAME", String)
    address1 = Column("ADDRESS1", String)
    address2 = Column("ADDRESS2", String)
    city = Column("CITY", String)
    state = Column("STATE", String)
    zip = Column("ZIP", String)
    invoice = Column("INVOICE", String)
    descr = Column("DESCR", String)
    inv_date = Column("INV_DATE", TIMESTAMP)
    due_date = Column("DUE_DATE", TIMESTAMP)
    dis_date = Column("DIS_DATE", TIMESTAMP)
    iddiscount = Column("IDDISCOUNT", String)
    idcharge = Column("IDCHARGE", String)
    discoun = Column("DISCOUN", String)
    charge = Column("CHARGE", String)
    terms = Column("TERMS", String)
    in_level = Column("IN_LEVEL", String)
    po_no = Column("PO_NO", String)
    salesman = Column("SALESMAN", String)
    ship_via = Column("SHIP_VIA", String)
    e_date = Column("E_DATE", TIMESTAMP)
    discount = Column("DISCOUNT", DECIMAL)
    overdue = Column("OVERDUE", DECIMAL)
    freight = Column("FREIGHT", Integer)
    tax = Column("TAX", DECIMAL)
    subtotal = Column("SUBTOTAL", DECIMAL)
    total = Column("TOTAL", DECIMAL)
    status = Column("STATUS", String)
    total_paid = Column("TOTAL_PAID", DECIMAL)
    total_w = Column("TOTAL_W", DECIMAL)
    balance = Column("BALANCE", DECIMAL)
    check_no = Column("CHECK_NO", String)
    check_date = Column("CHECK_DATE", TIMESTAMP)
    c_id = Column("C_ID", String)
    c_name = Column("C_NAME", String)
    c_address1 = Column("C_ADDRESS1", String)
    c_address2 = Column("C_ADDRESS2", String)
    c_city = Column("C_CITY", String)
    c_state = Column("C_STATE", String)
    c_zip = Column("C_ZIP", String)
    email = Column("EMAIL", String)
    billing_co = Column("BILLING_CO", String)
    ship_date = Column("SHIP_DATE", TIMESTAMP)
    frght_amt = Column("FRGHT_AMT", String)
    frght_type = Column("FRGHT_TYPE", String)
    user_name = Column("USER_NAME", String)
    was_proc = Column("WAS_PROC", Boolean)
    memo = Column("MEMO", String)
    signature = Column("SIGNATURE", BINARY)
    country = Column("COUNTRY", String)
    c_country = Column("C_COUNTRY", String)
    close_date = Column("CLOSE_DATE", TIMESTAMP)
    so_tax = Column("SO_TAX", DECIMAL)
    man_tax = Column("MAN_TAX", Boolean)
    orig_inv = Column("ORIG_INV", String)
    orig_aid = Column("ORIG_AID", String)
    print_time = Column("PRINT_TIME", String)
    c_fr_order = Column("C_FR_ORDER", Boolean)
    crea_date = Column("CREA_DATE", TIMESTAMP)
    crea_time = Column("CREA_TIME", String)
    proc_date = Column("PROC_DATE", TIMESTAMP)
    proc_time = Column("PROC_TIME", String)
    ar_trade = Column("AR_TRADE", String)
    freight_gl = Column("FREIGHT_GL", String)
    finance = Column("FINANCE", String)
    cust_disc = Column("CUST_DISC", String)
    down_pay = Column("DOWN_PAY", String)
    def_dept = Column("DEF_DEPT", String)
    warehouse = Column("WAREHOUSE", String)
    autoid = Column("AUTOID", String)
    csend_date = Column("CSEND_DATE", TIMESTAMP)
    csend_time = Column("CSEND_TIME", String)
    csend_mes = Column("CSEND_MES", String)
    c_rate = Column("C_RATE", String)
    curr_id = Column("CURR_ID", String)
    copied = Column("COPIED", Boolean)
    prevord = Column("PREVORD", String)
    trim = Column("TRIM", Boolean)
    metal = Column("METAL", Boolean)
    div_aid = Column("DIV_AID", String)
    authorized = Column("AUTHORIZED", DECIMAL)
    web_sale = Column("WEB_SALE", Boolean)
    phone = Column("PHONE", String)
    web_aid = Column("WEB_AID", String)
    cf_email = Column("CF_EMAIL", String)
    cf_sent = Column("CF_SENT", Boolean)
    rollexdt = Column("ROLLEXDT", TIMESTAMP)
    rollprocdt = Column("ROLLPROCDT", TIMESTAMP)
    c_email = Column("C_EMAIL", String)
    c_phone = Column("C_PHONE", String)
    last_print = Column("LAST_PRINT", String)
    handling = Column("HANDLING", DECIMAL)
    freightexp = Column("FREIGHTEXP", String)
    ly_pts_got = Column("LY_PTS_GOT", DECIMAL)
    to_b_sent = Column("TO_B_SENT", Boolean)
    internalnt = Column("INTERNALNT", String)
    out_city = Column("OUT_CITY", Boolean)
    c_tax = Column("C_TAX", DECIMAL)
    c_manual = Column("C_MANUAL", Boolean)
    arpw_id = Column("ARPW_ID", String)
    comis_paid = Column("COMIS_PAID", Boolean)
    job_id = Column("JOB_ID", String)
    num_bill = Column("NUM_BILL", String)
    use_jobret = Column("USE_JOBRET", Boolean)
    from_tandm = Column("FROM_TANDM", Boolean)
    subilnoret = Column("SUBILNORET", DECIMAL)
    arqtaidsrc = Column("ARQTAIDSRC", String)
    usetaxed = Column("USETAXED", Boolean)
    cntct_aid = Column("CNTCT_AID", String)
    ccntct_aid = Column("CCNTCT_AID", String)
    man_usetax = Column("MAN_USETAX", Boolean)
    externalid = Column("EXTERNALID", String)
    p_rounddif = Column("P_ROUNDDIF", DECIMAL)
    details = relationship('Arinvdet', back_populates="order", innerjoin=True, primaryjoin='Arinv.autoid == Arinvdet.doc_aid')


class Arinvdet(Base):
    arinvdet_guid = Column('ARINVDET_GUID', String, primary_key=True)
    recno5 = Column('RECNO5', Integer)
    invoice = Column('INVOICE', String)
    id = Column('ID', String)
    doc_type = Column('DOC_TYPE', String)
    doc_aid = Column('DOC_AID', String, ForeignKey(Arinv.autoid))
    inv_date = Column('INV_DATE', TIMESTAMP)
    quan = Column('QUAN', DECIMAL)
    ship = Column('SHIP', DECIMAL)
    m_quan = Column('M_QUAN', DECIMAL)
    orig_quan = Column('ORIG_QUAN', DECIMAL)
    inven = Column('INVEN', String, ForeignKey('INVENTRY.ID'))
    c_type = Column('C_TYPE', DECIMAL)
    unit_meas = Column('UNIT_MEAS', String)
    descr = Column('DESCR', String)
    unit = Column('UNIT', DECIMAL)
    price = Column('PRICE', DECIMAL)
    so_amount = Column('SO_AMOUNT', DECIMAL)
    discount = Column('DISCOUNT', DECIMAL)
    sodiscount = Column('SODISCOUNT', DECIMAL)
    timestamp = Column('TIMESTAMP', String)
    par_time = Column('PAR_TIME', String)
    gpar_time = Column('GPAR_TIME', String)
    status = Column('STATUS', DECIMAL)
    u_cost = Column('U_COST', DECIMAL)
    costs = Column('COSTS', DECIMAL)
    tax_group = Column('TAX_GROUP', String)
    exm_overid = Column('EXM_OVERID', String)
    ship_date = Column('SHIP_DATE', TIMESTAMP)
    weight = Column('WEIGHT', DECIMAL)
    print = Column('PRINT', Boolean),
    ap_partime = Column('AP_PARTIME', String)
    print_quan = Column('PRINT_QUAN', Boolean)
    print_uom = Column('PRINT_UOM', Boolean)
    account = Column('ACCOUNT', String)
    warehouse = Column('WAREHOUSE', String)
    autoid = Column('AUTOID', String)
    pcm_type = Column('PCM_TYPE', DECIMAL)
    pcm_perc = Column('PCM_PERC', DECIMAL)
    mto = Column('MTO', Boolean)
    mto_d_sync = Column('MTO_D_SYNC', Boolean)
    drop_ven = Column('DROP_VEN', String)
    drop_part = Column('DROP_PART', String)
    drop_aid = Column('DROP_AID', String)
    purc_meth = Column('PURC_METH', DECIMAL)
    c_price = Column('C_PRICE', DECIMAL)
    c_unit = Column('C_UNIT', DECIMAL)
    fxline = Column('FXLINE', Boolean)
    c_formula = Column('C_FORMULA', String)
    width = Column('WIDTH', String)
    widthd = Column('WIDTHD', DECIMAL)
    height = Column('HEIGHT', String)
    heightd = Column('HEIGHTD', DECIMAL)
    dem = Column('DEM', String)
    demd = Column('DEMD', DECIMAL)
    manual_p = Column('MANUAL_P', Boolean)
    manual_c = Column('MANUAL_C', Boolean)
    round = Column('ROUND', DECIMAL)
    comment = Column('COMMENT', String)
    ea_quan = Column('EA_QUAN', DECIMAL)
    r_ea_quan = Column('R_EA_QUAN', DECIMAL)
    report_n = Column('REPORT_N', String)
    random_w = Column('RANDOM_W', Boolean)
    random_h = Column('RANDOM_H', Boolean)
    item_num = Column('ITEM_NUM', String)
    feet = Column('FEET', DECIMAL)
    inchesd = Column('INCHESD', DECIMAL)
    inches = Column('INCHES', String)
    c_mfg = Column('C_MFG', DECIMAL)
    r_serial = Column('R_SERIAL', String)
    su_autoid = Column('SU_AUTOID', String)
    trade_in = Column('TRADE_IN', Boolean)
    in_level = Column('IN_LEVEL', String)
    job_id = Column('JOB_ID', String)
    jobstg_id = Column('JOBSTG_ID', String)
    aia = Column('AIA', String)
    retn_type = Column('RETN_TYPE', String)
    retn_perc = Column('RETN_PERC', DECIMAL)
    int_note = Column('INT_NOTE', String)
    tax_expl = Column('TAX_EXPL', String)
    on_site = Column('ON_SITE', DECIMAL)
    order = relationship('Arinv', back_populates='details')
    rel_inventry = relationship('Inventry', back_populates='arinvdet')


class Inprodtype(Base):
    inprodtype_guid: Mapped[str] = mapped_column('INPRODTYPE_GUID', String(36), primary_key=True)
    recno5: Mapped[int] = mapped_column('RECNO5', Integer)
    prod_type: Mapped[str] = mapped_column('PROD_TYPE', String(20))
    ar_aid: Mapped[str] = mapped_column('AR_AID', String(16))
    autoid: Mapped[str] = mapped_column('AUTOID', String(16))


class Inventry(Base):
    inventry_guid = Column('INVENTRY_GUID', String, primary_key=True)
    recno5 = Column('RECNO5', Integer)
    id = Column('ID', String)
    tree_id = Column('TREE_ID', String)
    upc = Column('UPC', String(20))
    type = Column('TYPE', String)
    c_type = Column('C_TYPE', DECIMAL)
    descr_1 = Column('DESCR_1', String)
    descr_1prn = Column('DESCR_1PRN', Boolean)
    descr_1prp = Column('DESCR_1PRP', Boolean)
    descr_2 = Column('DESCR_2', String)
    descr_2prn = Column('DESCR_2PRN', Boolean)
    descr_2prp = Column('DESCR_2PRP', Boolean)
    descr_3 = Column('DESCR_3', String)
    descr_3prn = Column('DESCR_3PRN', Boolean)
    descr_3prp = Column('DESCR_3PRP', Boolean)
    markup = Column('MARKUP', String)
    markup_id = Column('MARKUP_ID', String)
    base = Column('BASE', DECIMAL)
    cost = Column('COST', DECIMAL)
    tax_group = Column('TAX_GROUP', String)
    weight = Column('WEIGHT', DECIMAL)
    date = Column('DATE', Date)
    quan2order = Column('QUAN2ORDER', DECIMAL)
    count = Column('COUNT', DECIMAL)
    location = Column('LOCATION', String)
    min_inven = Column('MIN_INVEN', DECIMAL)
    max_inven = Column('MAX_INVEN', DECIMAL)
    order_amt = Column('ORDER_AMT', DECIMAL)
    pri_vendor = Column('PRI_VENDOR', String)
    pur_o = Column('PUR_O', DECIMAL)
    pur_s = Column('PUR_S', DECIMAL)
    sales_o = Column('SALES_O', DECIMAL)
    sales_s = Column('SALES_S', DECIMAL)
    m_in_o = Column('M_IN_O', DECIMAL)
    m_in_s = Column('M_IN_S', DECIMAL)
    m_out_o = Column('M_OUT_O', DECIMAL)
    m_out_s = Column('M_OUT_S', DECIMAL)
    job_out_o = Column('JOB_OUT_O', DECIMAL)
    job_out_s = Column('JOB_OUT_S', DECIMAL)
    each_unit = Column('EACH_UNIT', String)
    int_quan = Column('INT_QUAN', Boolean)
    def_unit = Column('DEF_UNIT', String)
    last_chk_u = Column('LAST_CHK_U', String)
    last_chk_d = Column('LAST_CHK_D', Date)
    last_chk_t = Column('LAST_CHK_T', String)
    auto_cost = Column('AUTO_COST', Boolean)
    memo = Column('MEMO', String)
    mfg = Column('MFG', String)
    mfg_part = Column('MFG_PART', String)
    web = Column('WEB', String)
    est_hours = Column('EST_HOURS', DECIMAL)
    def_work = Column('DEF_WORK', String)
    perc_adj = Column('PERC_ADJ', DECIMAL)
    perc_adj_c = Column('PERC_ADJ_C', DECIMAL)
    pur_memo = Column('PUR_MEMO', String)
    sale_class = Column('SALE_CLASS', String)
    updatecost = Column('UPDATECOST', Boolean)
    updvencost = Column('UPDVENCOST', Boolean)
    ins_acc = Column('INS_ACC', DECIMAL)
    returndays = Column('RETURNDAYS', String)
    sale_acc = Column('SALE_ACC', String)
    use_pl_gl = Column('USE_PL_GL', Boolean)
    pur_acc = Column('PUR_ACC', String)
    adjust = Column('ADJUST', String)
    asset = Column('ASSET', String)
    use_itemgl = Column('USE_ITEMGL', Boolean)
    mfg_cost = Column('MFG_COST', String)
    autoid = Column('AUTOID', String)
    fixed_cost = Column('FIXED_COST', Boolean)
    adj_inven = Column('ADJ_INVEN', String)
    autoserial = Column('AUTOSERIAL', Boolean)
    weigh_it = Column('WEIGH_IT', Boolean)
    def_type = Column('DEF_TYPE', String)
    ent_task = Column('ENT_TASK', Boolean)
    purc_meth = Column('PURC_METH', DECIMAL)
    pur_ssed = Column('PUR_SSED', Boolean)
    s_cust_i = Column('S_CUST_I', String)
    d_width = Column('D_WIDTH', DECIMAL)
    d_height = Column('D_HEIGHT', DECIMAL)
    d_dem = Column('D_DEM', DECIMAL)
    width = Column('WIDTH', DECIMAL)
    width_r = Column('WIDTH_R', Boolean)
    height = Column('HEIGHT', DECIMAL)
    height_r = Column('HEIGHT_R', Boolean)
    dem = Column('DEM', DECIMAL)
    dem_r = Column('DEM_R', Boolean)
    waste_p = Column('WASTE_P', DECIMAL)
    item_num = Column('ITEM_NUM', Boolean)
    d_replace = Column('D_REPLACE', Boolean)
    trade_in = Column('TRADE_IN', Boolean)
    trade_acc = Column('TRADE_ACC', String)
    su_autoid = Column('SU_AUTOID', String)
    show_stock = Column('SHOW_STOCK', String)
    ostk_msg = Column('OSTK_MSG', String)
    hide_wwprc = Column('HIDE_WWPRC', Boolean)
    web_descr1 = Column('WEB_DESCR1', String)
    web_descr2 = Column('WEB_DESCR2', String)
    web_descr3 = Column('WEB_DESCR3', String)
    comp_tpl = Column('COMP_TPL', String)
    comp_descr = Column('COMP_DESCR', String)
    template = Column('TEMPLATE', String)
    descr1copy = Column('DESCR1COPY', Boolean)
    descr2copy = Column('DESCR2COPY', Boolean)
    descr3copy = Column('DESCR3COPY', Boolean)
    seasonal = Column('SEASONAL', String)
    show_web = Column('SHOW_WEB', Boolean)
    acc_label = Column('ACC_LABEL', String)
    showserial = Column('SHOWSERIAL', Boolean)
    perc_adj_n = Column('PERC_ADJ_N', DECIMAL)
    rol_fnprod = Column('ROL_FNPROD', Boolean)
    rol_rwmtrl = Column('ROL_RWMTRL', Boolean)
    rol_gauge = Column('ROL_GAUGE', DECIMAL)
    rol_thick = Column('ROL_THICK', DECIMAL)
    rol_color = Column('ROL_COLOR', String)
    rol_dense = Column('ROL_DENSE', DECIMAL)
    rol_width = Column('ROL_WIDTH', DECIMAL)
    rol_fnexdt = Column('ROL_FNEXDT', Date)
    rol_rwexdt = Column('ROL_RWEXDT', Date)
    lotselopt = Column('LOTSELOPT', String)
    show_lots = Column('SHOW_LOTS', Boolean)
    inactive = Column('INACTIVE', Boolean)
    notqtysell = Column('NOTQTYSELL', Boolean)
    no_search = Column('NO_SEARCH', Boolean)
    rol_profil = Column('ROL_PROFIL', String)
    value = Column('VALUE', DECIMAL)
    comp_flatv = Column('COMP_FLATV', Boolean)
    jobstg_id = Column('JOBSTG_ID', String)
    cto_prompt = Column('CTO_PROMPT', DECIMAL)
    tree_path = Column('TREE_PATH', String)
    int_note = Column('INT_NOTE', String)
    upc2 = Column('UPC2', String)
    upc3 = Column('UPC3', String)
    def_to_ser = Column('DEF_TO_SER', Boolean)
    def_to_pri = Column('DEF_TO_PRI', Boolean)
    usetaxelig = Column('USETAXELIG', Boolean)
    usetax_acc = Column('USETAX_ACC', String)
    externalid = Column('EXTERNALID', String)
    jc_offset = Column('JC_OFFSET', Boolean)
    isshortcut = Column('ISSHORTCUT', Boolean)
    av_in_off = Column('AV_IN_OFF', DECIMAL)
    av_out_off = Column('AV_OUT_OFF', DECIMAL)
    oh_in_off = Column('OH_IN_OFF', DECIMAL)
    oh_out_off = Column('OH_OUT_OFF', DECIMAL)
    no_in_off = Column('NO_IN_OFF', DECIMAL)
    no_out_off = Column('NO_OUT_OFF', DECIMAL)
    prod_type = Column('PROD_TYPE', String)
    arinvdet = relationship("Arinvdet", back_populates="rel_inventry", innerjoin=True, primaryjoin='Inventry.id == Arinvdet.inven')
